/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ContentDisposition;
import io.swagger.client.model.FormDataContentDisposition;
import io.swagger.client.model.MediaType;
import io.swagger.client.model.MessageBodyWorkers;
import io.swagger.client.model.MultiPart;
import io.swagger.client.model.ParameterizedHeader;
import io.swagger.client.model.Providers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * FormDataBodyPart
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-25T16:24:13.221+01:00")
public class FormDataBodyPart   {
  @SerializedName("contentDisposition")
  private ContentDisposition contentDisposition = null;

  @SerializedName("entity")
  private Object entity = null;

  @SerializedName("headers")
  private Map<String, List<String>> headers = new HashMap<String, List<String>>();

  @SerializedName("mediaType")
  private MediaType mediaType = null;

  @SerializedName("messageBodyWorkers")
  private MessageBodyWorkers messageBodyWorkers = null;

  @SerializedName("parent")
  private MultiPart parent = null;

  @SerializedName("providers")
  private Providers providers = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("simple")
  private Boolean simple = false;

  @SerializedName("formDataContentDisposition")
  private FormDataContentDisposition formDataContentDisposition = null;

  @SerializedName("parameterizedHeaders")
  private Map<String, List<ParameterizedHeader>> parameterizedHeaders = new HashMap<String, List<ParameterizedHeader>>();

  public FormDataBodyPart contentDisposition(ContentDisposition contentDisposition) {
    this.contentDisposition = contentDisposition;
    return this;
  }

   /**
   * Get contentDisposition
   * @return contentDisposition
  **/
  @ApiModelProperty(example = "null", value = "")
  public ContentDisposition getContentDisposition() {
    return contentDisposition;
  }

  public void setContentDisposition(ContentDisposition contentDisposition) {
    this.contentDisposition = contentDisposition;
  }

  public FormDataBodyPart entity(Object entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getEntity() {
    return entity;
  }

  public void setEntity(Object entity) {
    this.entity = entity;
  }

  public FormDataBodyPart headers(Map<String, List<String>> headers) {
    this.headers = headers;
    return this;
  }

  public FormDataBodyPart putHeadersItem(String key, List<String> headersItem) {
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, List<String>> getHeaders() {
    return headers;
  }

  public void setHeaders(Map<String, List<String>> headers) {
    this.headers = headers;
  }

  public FormDataBodyPart mediaType(MediaType mediaType) {
    this.mediaType = mediaType;
    return this;
  }

   /**
   * Get mediaType
   * @return mediaType
  **/
  @ApiModelProperty(example = "null", value = "")
  public MediaType getMediaType() {
    return mediaType;
  }

  public void setMediaType(MediaType mediaType) {
    this.mediaType = mediaType;
  }

  public FormDataBodyPart messageBodyWorkers(MessageBodyWorkers messageBodyWorkers) {
    this.messageBodyWorkers = messageBodyWorkers;
    return this;
  }

   /**
   * Get messageBodyWorkers
   * @return messageBodyWorkers
  **/
  @ApiModelProperty(example = "null", value = "")
  public MessageBodyWorkers getMessageBodyWorkers() {
    return messageBodyWorkers;
  }

  public void setMessageBodyWorkers(MessageBodyWorkers messageBodyWorkers) {
    this.messageBodyWorkers = messageBodyWorkers;
  }

  public FormDataBodyPart parent(MultiPart parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(example = "null", value = "")
  public MultiPart getParent() {
    return parent;
  }

  public void setParent(MultiPart parent) {
    this.parent = parent;
  }

  public FormDataBodyPart providers(Providers providers) {
    this.providers = providers;
    return this;
  }

   /**
   * Get providers
   * @return providers
  **/
  @ApiModelProperty(example = "null", value = "")
  public Providers getProviders() {
    return providers;
  }

  public void setProviders(Providers providers) {
    this.providers = providers;
  }

  public FormDataBodyPart name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FormDataBodyPart value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public FormDataBodyPart simple(Boolean simple) {
    this.simple = simple;
    return this;
  }

   /**
   * Get simple
   * @return simple
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getSimple() {
    return simple;
  }

  public void setSimple(Boolean simple) {
    this.simple = simple;
  }

  public FormDataBodyPart formDataContentDisposition(FormDataContentDisposition formDataContentDisposition) {
    this.formDataContentDisposition = formDataContentDisposition;
    return this;
  }

   /**
   * Get formDataContentDisposition
   * @return formDataContentDisposition
  **/
  @ApiModelProperty(example = "null", value = "")
  public FormDataContentDisposition getFormDataContentDisposition() {
    return formDataContentDisposition;
  }

  public void setFormDataContentDisposition(FormDataContentDisposition formDataContentDisposition) {
    this.formDataContentDisposition = formDataContentDisposition;
  }

  public FormDataBodyPart parameterizedHeaders(Map<String, List<ParameterizedHeader>> parameterizedHeaders) {
    this.parameterizedHeaders = parameterizedHeaders;
    return this;
  }

  public FormDataBodyPart putParameterizedHeadersItem(String key, List<ParameterizedHeader> parameterizedHeadersItem) {
    this.parameterizedHeaders.put(key, parameterizedHeadersItem);
    return this;
  }

   /**
   * Get parameterizedHeaders
   * @return parameterizedHeaders
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, List<ParameterizedHeader>> getParameterizedHeaders() {
    return parameterizedHeaders;
  }

  public void setParameterizedHeaders(Map<String, List<ParameterizedHeader>> parameterizedHeaders) {
    this.parameterizedHeaders = parameterizedHeaders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormDataBodyPart formDataBodyPart = (FormDataBodyPart) o;
    return Objects.equals(this.contentDisposition, formDataBodyPart.contentDisposition) &&
        Objects.equals(this.entity, formDataBodyPart.entity) &&
        Objects.equals(this.headers, formDataBodyPart.headers) &&
        Objects.equals(this.mediaType, formDataBodyPart.mediaType) &&
        Objects.equals(this.messageBodyWorkers, formDataBodyPart.messageBodyWorkers) &&
        Objects.equals(this.parent, formDataBodyPart.parent) &&
        Objects.equals(this.providers, formDataBodyPart.providers) &&
        Objects.equals(this.name, formDataBodyPart.name) &&
        Objects.equals(this.value, formDataBodyPart.value) &&
        Objects.equals(this.simple, formDataBodyPart.simple) &&
        Objects.equals(this.formDataContentDisposition, formDataBodyPart.formDataContentDisposition) &&
        Objects.equals(this.parameterizedHeaders, formDataBodyPart.parameterizedHeaders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentDisposition, entity, headers, mediaType, messageBodyWorkers, parent, providers, name, value, simple, formDataContentDisposition, parameterizedHeaders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormDataBodyPart {\n");
    
    sb.append("    contentDisposition: ").append(toIndentedString(contentDisposition)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    messageBodyWorkers: ").append(toIndentedString(messageBodyWorkers)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    simple: ").append(toIndentedString(simple)).append("\n");
    sb.append("    formDataContentDisposition: ").append(toIndentedString(formDataContentDisposition)).append("\n");
    sb.append("    parameterizedHeaders: ").append(toIndentedString(parameterizedHeaders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

